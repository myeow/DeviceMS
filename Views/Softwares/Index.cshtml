@*@model IEnumerable<DeviceMS.Models.Software>*@
@model PagedList.IPagedList<DeviceMS.Models.Software>
@using PagedList.Mvc;           
@{
    ViewBag.Title = "Software List";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Add New", "Create")
</p>
@using (Html.BeginForm("Index", "Softwares", FormMethod.Get))
{
    <p>
        <div class="form-group form-inline">
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
            <input type="submit" value="Search" class="btn btn-default" /><br />
        </div>
    </p>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm})
            @*@Html.DisplayNameFor(model => model.Name)*@
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.DateCreated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreatedBy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DateModified)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ModifiedBy)
        </th>*@
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.DateCreated)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CreatedBy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateModified)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ModifiedBy)
        </td>*@
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.SoftwareId }, new { @class = "btn btn-primary btn-xs" }) 
            @Html.ActionLink("Details", "Details", new { id = item.SoftwareId }, new { @class = "btn btn-info btn-xs" }) 
            @Html.ActionLink("Delete", "Delete", new { id = item.SoftwareId }, new { @class = "btn btn-danger btn-xs" })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))